{"ast":null,"code":"var _jsxFileName = \"/Users/paulhoffart/Desktop/Atomic-Job/atomic-job-front-end/src/containers/Jobs.js\";\nimport React from 'react';\nimport JobShow from \"../components/JobShow\"; // import JobList from \"../void/JobList\"\n\nimport List from '../components/List';\nimport Title from '../components/Title';\nimport JobForm from \"../components/JobForm\";\nexport default class Jobs extends React.Component {\n  constructor() {\n    super();\n\n    this.handleShowJob = job => {\n      console.log(\"job\", job);\n      this.setState({\n        showJob: job\n      });\n    };\n\n    this.handleBack = () => {\n      console.log(\"ASDfasdf\");\n      this.setState({\n        showJob: null\n      });\n    };\n\n    this.addJob = event => {\n      event.preventDefault();\n      let postObject = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          title: event.target[0].value,\n          company: event.target[1].value,\n          location: event.target[2].value,\n          url: event.target[3].value,\n          status: \"apply\",\n          interview: \"false\",\n          user_id: this.state.user_id\n        })\n      };\n      event.target.reset();\n      fetch(\"http://localhost:3000/jobs\", postObject).then(resp => resp.json()).then(newJob => {\n        this.setState({\n          jobsDisplay: [...this.state.jobs, newJob],\n          showJob: newJob\n        });\n      });\n    };\n\n    this.state = {\n      jobs: [],\n      jobsDisplay: [],\n      user_id: 11,\n      showJob: null\n    };\n  }\n\n  componentDidMount() {\n    // we can pass username or user_id to the backend \n    fetch(`http://localhost:3000/users/${this.state.user_id}/jobs`).then(resp => resp.json()).then(jobData => {\n      this.setState({\n        jobs: jobData,\n        jobsDisplay: jobData // showJob: jobData[0]\n\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      title: \"Your job listings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(List, {\n      title: \"Your current job listings\",\n      items: this.state.jobsDisplay,\n      handleShowJob: this.handleShowJob,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(JobForm, {\n      addJob: this.addJob,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }), this.state.showJob ? /*#__PURE__*/React.createElement(JobShow, {\n      job: this.state.showJob,\n      handleBack: this.handleBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      title: \"Your current job listings\",\n      items: this.state.jobsDisplay,\n      handleShowJob: this.handleShowJob,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 12\n      }\n    }), \" \"));\n  }\n\n} // title: \"this is title from the default props\",\n// items: [\n//   {link: \"job-single.html\",\n//   logo: \"/images/job_logo_1.jpg\",\n//   title: \"Product Designer\",\n//   company: \"Adidas\",\n//   location: \"New York\",\n//   type: \"Remote\"},\n// t.string \"title\"\n// t.string \"company\"\n// t.string \"status\"\n// t.boolean \"interview\"\n// t.string \"location\"\n// t.string \"url\"","map":{"version":3,"sources":["/Users/paulhoffart/Desktop/Atomic-Job/atomic-job-front-end/src/containers/Jobs.js"],"names":["React","JobShow","List","Title","JobForm","Jobs","Component","constructor","handleShowJob","job","console","log","setState","showJob","handleBack","addJob","event","preventDefault","postObject","method","headers","body","JSON","stringify","title","target","value","company","location","url","status","interview","user_id","state","reset","fetch","then","resp","json","newJob","jobsDisplay","jobs","componentDidMount","jobData","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport JobShow from \"../components/JobShow\"\n// import JobList from \"../void/JobList\"\nimport List from '../components/List'\nimport Title from '../components/Title'\nimport JobForm from \"../components/JobForm\"\n\nexport default class Jobs extends React.Component {\n\n  constructor(){\n    super()\n    this.state = {\n      jobs : [], \n      jobsDisplay: [], \n      user_id: 11,\n      showJob: null\n    }\n  }\n\n  componentDidMount(){\n    // we can pass username or user_id to the backend \n    fetch(`http://localhost:3000/users/${this.state.user_id}/jobs`)\n    .then(resp => resp.json())\n    .then( jobData => {\n      this.setState({\n        jobs: jobData,\n        jobsDisplay: jobData,\n        // showJob: jobData[0]\n      })\n    })\n  }\n  \n  handleShowJob = (job) => {\n    console.log(\"job\", job)\n    this.setState({\n      showJob: job\n    })\n\n\n    \n  }\n\n  handleBack = () => {\n    console.log(\"ASDfasdf\")\n    this.setState({\n      showJob: null\n    })\n\n\n  }\n\n  addJob = (event) => {\n    event.preventDefault()\n    let postObject = {\n      method: \"POST\",\n      headers: {\"Content-Type\": \"application/json\"},\n      body: JSON.stringify({\n        title: event.target[0].value,\n        company: event.target[1].value,\n        location: event.target[2].value,\n        url: event.target[3].value,\n        status: \"apply\",\n        interview: \"false\",\n        user_id: this.state.user_id\n      })\n    }\n    event.target.reset()\n    fetch(\"http://localhost:3000/jobs\", postObject)\n    .then(resp => resp.json())\n    .then(newJob => {\n      this.setState({\n        jobsDisplay: [...this.state.jobs, newJob],\n        showJob: newJob\n      })\n    })\n  }\n\n\n  render(){\n    return (\n      <div>\n        <Title title = \"Your job listings\" />\n        <List title = \"Your current job listings\" items={this.state.jobsDisplay} handleShowJob={this.handleShowJob}/>\n      <JobForm addJob={this.addJob}/>\n        {\n        this.state.showJob\n        ? <JobShow job={this.state.showJob} handleBack={this.handleBack}/> \n        : (<div>\n           <List title = \"Your current job listings\" items={this.state.jobsDisplay} handleShowJob={this.handleShowJob}/> </div>)\n        }\n      </div>\n    )\n  }\n\n}\n\n// title: \"this is title from the default props\",\n// items: [\n//   {link: \"job-single.html\",\n//   logo: \"/images/job_logo_1.jpg\",\n//   title: \"Product Designer\",\n//   company: \"Adidas\",\n//   location: \"New York\",\n//   type: \"Remote\"},\n\n// t.string \"title\"\n// t.string \"company\"\n// t.string \"status\"\n// t.boolean \"interview\"\n// t.string \"location\"\n// t.string \"url\""]},"metadata":{},"sourceType":"module"}