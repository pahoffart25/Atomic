{"ast":null,"code":"var _jsxFileName = \"/Users/paulhoffart/Desktop/Atomic-Job/atomic-job-front-end/src/components/UserTasks.js\";\nimport React from \"react\";\nimport TasksBox from \"./TasksBox\";\nexport default class UserTasks extends React.Component {\n  constructor() {\n    super();\n\n    this.editTask = task => {\n      fetch(`http://localhost:3000/user_tasks/${task.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.token}`\n        },\n        body: JSON.stringify(task)\n      }).then(resp => resp.json()).then(updatedTask => {\n        let updatedTaskList = this.state.tasks.map(task => task.id === updatedTask.id ? task = updatedTask : task);\n        this.setState({\n          tasks: updatedTaskList\n        });\n      });\n    };\n\n    this.addTask = (event, task) => {\n      if (event.target[0].value !== \"\") {\n        event.preventDefault();\n        let postObj = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.token}`\n          },\n          body: JSON.stringify({\n            item: event.target[0].value,\n            closed: false,\n            user_id: this.props.user.id\n          })\n        };\n        event.target.reset();\n        fetch(`http://localhost:3000/user_tasks`, postObj).then(resp => resp.json()).then(newTask => {\n          this.state.tasks.push(newTask);\n          this.setState({\n            tasks: this.state.tasks\n          });\n        });\n      } else {}\n    };\n\n    this.deleteTask = task => {\n      fetch(`http://localhost:3000/user_tasks/${task.id}`, {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${localStorage.token}`\n        }\n      }).then(resp => resp.json()).then(reminaingTaskList => {\n        this.setState({\n          tasks: reminaingTaskList\n        });\n      });\n    };\n\n    this.state = {\n      tasks: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(`http://localhost:3000/users/${this.props.user.id}/tasks`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${localStorage.token}`\n      }\n    }).then(resp => resp.json()).then(tasksList => {\n      this.setState({\n        tasks: tasksList\n      });\n    });\n  }\n\n  render() {\n    console.log(\"usertasks rendered\");\n    return (\n      /*#__PURE__*/\n      // <section className=\"site-section\">\n      React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mt-5 justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TasksBox, {\n        tasks: this.state.tasks,\n        addTask: this.addTask,\n        editTask: this.editTask,\n        deleteTask: this.deleteTask,\n        handleTaskChange: this.handleTaskChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }\n      }))) // </section>\n\n    );\n  }\n\n}","map":{"version":3,"sources":["/Users/paulhoffart/Desktop/Atomic-Job/atomic-job-front-end/src/components/UserTasks.js"],"names":["React","TasksBox","UserTasks","Component","constructor","editTask","task","fetch","id","method","headers","Authorization","localStorage","token","body","JSON","stringify","then","resp","json","updatedTask","updatedTaskList","state","tasks","map","setState","addTask","event","target","value","preventDefault","postObj","item","closed","user_id","props","user","reset","newTask","push","deleteTask","reminaingTaskList","componentDidMount","tasksList","render","console","log","handleTaskChange"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport TasksBox from \"./TasksBox\"\n\nexport default class UserTasks extends React.Component {\n\n  constructor(){\n    super()\n    this.state = {\n      tasks: []\n    }\n  }\n\n  componentDidMount(){\n    fetch(`http://localhost:3000/users/${this.props.user.id}/tasks`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${localStorage.token}` \n      }\n    })\n    .then(resp => resp.json())\n    .then(tasksList => {\n      this.setState({\n        tasks: tasksList\n      })\n    })\n  }\n\n  editTask = (task) => {\n    fetch(`http://localhost:3000/user_tasks/${task.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.token}`\n      }, \n      body: JSON.stringify(task)\n    })\n    .then(resp => resp.json())\n    .then(updatedTask => {\n      let updatedTaskList = this.state.tasks.map( task=> \n        task.id === updatedTask.id ? task = updatedTask : task\n      )\n      this.setState({\n        tasks: updatedTaskList\n      })\n    })\n  }\n\n  addTask = (event, task) => {\n    if (event.target[0].value !== \"\") {\n    event.preventDefault()\n    let postObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.token}`\n      },\n      body: JSON.stringify({\n        item: event.target[0].value,\n        closed: false,\n        user_id: this.props.user.id\n      })\n    }\n    event.target.reset()\n    fetch(`http://localhost:3000/user_tasks`, postObj)\n    .then(resp => resp.json())\n    .then(newTask => {\n      this.state.tasks.push(newTask)\n      this.setState({\n        tasks: this.state.tasks\n      })\n    })\n    } else {\n      \n    }\n  }\n\n  deleteTask = (task) => {\n    fetch(`http://localhost:3000/user_tasks/${task.id}`, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Bearer ${localStorage.token}`\n      }\n    })\n    .then(resp => resp.json())\n    .then(reminaingTaskList => {\n      this.setState({\n        tasks: reminaingTaskList\n      })\n    })\n  }\n\n\n  render(){\n    console.log(\"usertasks rendered\")\n    return(\n\n      // <section className=\"site-section\">\n        <div className=\"container\">\n          <div className=\"mt-5 justify-content-center\">\n            {/* <div className=\"col-md-7 text-center\"> */}\n              <TasksBox \n                tasks={this.state.tasks} \n                addTask={this.addTask} \n                editTask={this.editTask} \n                deleteTask={this.deleteTask} \n                handleTaskChange={this.handleTaskChange}/>\n            {/* </div>  */}\n          </div> \n        </div> \n      // </section>\n\n\n    )\n  }\n\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}