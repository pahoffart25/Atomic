{"ast":null,"code":"var _jsxFileName = \"/Users/paulhoffart/Desktop/Atomic-Job/atomic-job-front-end/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Template from './containers/Template';\nimport Footer from './common/Footer';\nimport Navbar from './common/Navbar';\nimport Jobs from './containers/Jobs';\nimport Home from './containers/Home'; // import JobShow from './components/JobShow'\n\nimport JobForm from './components/JobForm';\nimport NotesPage from './containers/NotesPage';\nimport SingleCompany from './containers/SingleCompany';\nimport About from './containers/About';\nimport Login from './containers/Login';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nexport default class App extends React.Component {\n  constructor() {\n    super();\n\n    this.handleLogout = () => {\n      localStorage.clear();\n      this.setState({\n        user: false\n      });\n    };\n\n    this.handleLogin = user => this.setState({\n      user\n    });\n\n    this.renderRoutes = () => {\n      if (localStorage.user_id) {\n        let user = {\n          id: localStorage.user_id,\n          name: localStorage.user_name\n        };\n        return /*#__PURE__*/React.createElement(BrowserRouter, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Switch, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Route, {\n          exact: true,\n          path: \"/\",\n          render: routerProps => /*#__PURE__*/React.createElement(Home, Object.assign({}, routerProps, {\n            user: user,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 60\n            }\n          })),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(Route, {\n          exact: true,\n          path: \"/jobs\",\n          render: routerProps => /*#__PURE__*/React.createElement(Jobs, Object.assign({}, routerProps, {\n            user: user,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 64\n            }\n          })),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(Route, {\n          exact: true,\n          path: \"/job/new\",\n          render: routerProps => /*#__PURE__*/React.createElement(JobForm, Object.assign({}, routerProps, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 67\n            }\n          })),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(Route, {\n          exact: true,\n          path: \"/notes\",\n          render: routerProps => /*#__PURE__*/React.createElement(NotesPage, Object.assign({}, routerProps, {\n            user: user,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 65\n            }\n          })),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(Route, {\n          exact: true,\n          path: \"/about\",\n          render: routerProps => /*#__PURE__*/React.createElement(About, Object.assign({}, routerProps, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 65\n            }\n          })),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(Route, {\n          exact: true,\n          path: \"/login\",\n          render: routerProps => /*#__PURE__*/React.createElement(Home, Object.assign({}, routerProps, {\n            user: user,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 65\n            }\n          })),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }\n        })));\n      } else {\n        return /*#__PURE__*/React.createElement(Login, {\n          handleLogin: this.handleLogin,\n          user: this.state.user,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 9\n          }\n        });\n      }\n    };\n\n    this.state = {\n      user: false\n    };\n  }\n\n  componentDidMount() {\n    const token = localStorage.getItem(\"token\");\n\n    if (token) {\n      fetch(`http://localhost:3000/auto_login`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(resp => resp.json()).then(user => this.setState({\n        user\n      }));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      user: this.state.user,\n      handleLogout: this.handleLogout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"site-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, this.renderRoutes()), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/paulhoffart/Desktop/Atomic-Job/atomic-job-front-end/src/App.js"],"names":["React","Template","Footer","Navbar","Jobs","Home","JobForm","NotesPage","SingleCompany","About","Login","BrowserRouter","Route","Switch","App","Component","constructor","handleLogout","localStorage","clear","setState","user","handleLogin","renderRoutes","user_id","id","name","user_name","routerProps","state","componentDidMount","token","getItem","fetch","headers","Authorization","then","resp","json","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAAQC,aAAR,EAAuBC,KAAvB,EAA8BC,MAA9B,QAA8C,kBAA9C;AAGA,eAAe,MAAMC,GAAN,SAAkBd,KAAK,CAACe,SAAxB,CAAkC;AAE/CC,EAAAA,WAAW,GAAE;AACX;;AADW,SAoBbC,YApBa,GAoBE,MAAM;AACnBC,MAAAA,YAAY,CAACC,KAAb;AACA,WAAKC,QAAL,CAAc;AAACC,QAAAA,IAAI,EAAE;AAAP,OAAd;AACD,KAvBY;;AAAA,SAyBbC,WAzBa,GAyBED,IAAD,IAAU,KAAKD,QAAL,CAAc;AAACC,MAAAA;AAAD,KAAd,CAzBX;;AAAA,SA2BbE,YA3Ba,GA2BE,MAAM;AACnB,UAAIL,YAAY,CAACM,OAAjB,EAAyB;AACvB,YAAIH,IAAI,GAAG;AAACI,UAAAA,EAAE,EAAEP,YAAY,CAACM,OAAlB;AAA2BE,UAAAA,IAAI,EAAER,YAAY,CAACS;AAA9C,SAAX;AACA,4BACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAsB,UAAA,MAAM,EAAGC,WAAD,iBAAiB,oBAAC,IAAD,oBAAWA,WAAX;AAAwB,YAAA,IAAI,EAAEP,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAEE,oBAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,OAAlB;AAA0B,UAAA,MAAM,EAAGO,WAAD,iBAAiB,oBAAC,IAAD,oBAAUA,WAAV;AAAuB,YAAA,IAAI,EAAEP,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,eAIE,oBAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,UAAlB;AAA6B,UAAA,MAAM,EAAGO,WAAD,iBAAiB,oBAAC,OAAD,oBAAaA,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,eAKE,oBAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,QAAlB;AAA2B,UAAA,MAAM,EAAGA,WAAD,iBAAiB,oBAAC,SAAD,oBAAeA,WAAf;AAA4B,YAAA,IAAI,EAAEP,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALF,eAOE,oBAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,QAAlB;AAA2B,UAAA,MAAM,EAAGO,WAAD,iBAAiB,oBAAC,KAAD,oBAAWA,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPF,eAQE,oBAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,QAAlB;AAA2B,UAAA,MAAM,EAAGA,WAAD,iBAAiB,oBAAC,IAAD,oBAAWA,WAAX;AAAwB,YAAA,IAAI,EAAEP,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UARF,CADF,CADF;AAcD,OAhBD,MAiBI;AACF,4BACE,oBAAC,KAAD;AAAO,UAAA,WAAW,EAAI,KAAKC,WAA3B;AAAwC,UAAA,IAAI,EAAE,KAAKO,KAAL,CAAWR,IAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAID;AAEF,KApDY;;AAEX,SAAKQ,KAAL,GAAa;AACXR,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD;;AAEDS,EAAAA,iBAAiB,GAAE;AACjB,UAAMC,KAAK,GAAGb,YAAY,CAACc,OAAb,CAAqB,OAArB,CAAd;;AACA,QAAGD,KAAH,EAAS;AACPE,MAAAA,KAAK,CAAE,kCAAF,EAAqC;AACxCC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,UAASJ,KAAM;AADxB;AAD+B,OAArC,CAAL,CAKCK,IALD,CAKMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EALd,EAMCF,IAND,CAMMf,IAAI,IAAI,KAAKD,QAAL,CAAc;AAACC,QAAAA;AAAD,OAAd,CANd;AAOD;AACF;;AAoCDkB,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAI,KAAKV,KAAL,CAAWR,IAA3B;AAAiC,MAAA,YAAY,EAAE,KAAKJ,YAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKM,YAAL,EADD,CAFJ,eAKE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AASD;;AAlE8C","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Template from './containers/Template'\nimport Footer from './common/Footer'\nimport Navbar from './common/Navbar'\nimport Jobs from './containers/Jobs'\nimport Home from './containers/Home'\n// import JobShow from './components/JobShow'\nimport JobForm from './components/JobForm'\nimport NotesPage from './containers/NotesPage'\nimport SingleCompany from './containers/SingleCompany'\nimport About from './containers/About'\nimport Login from './containers/Login'\nimport {BrowserRouter, Route, Switch,  } from 'react-router-dom'\n\n\nexport default class App extends React.Component {\n\n  constructor(){\n    super()\n    this.state = {\n      user: false\n    }\n  }\n\n  componentDidMount(){\n    const token = localStorage.getItem(\"token\")\n    if(token){\n      fetch(`http://localhost:3000/auto_login`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      })\n      .then(resp => resp.json())\n      .then(user => this.setState({user}))\n    }\n  }\n\n  handleLogout = () => {\n    localStorage.clear()\n    this.setState({user: false})\n  }\n\n  handleLogin = (user) => this.setState({user})\n\n  renderRoutes = () => {\n    if (localStorage.user_id){\n      let user = {id: localStorage.user_id, name: localStorage.user_name}\n      return(\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/\" render={(routerProps) => <Home  {...routerProps} user={user}/> }/>\n            <Route exact path=\"/jobs\" render={(routerProps) => <Jobs {...routerProps} user={user} /> }/>\n            {/* <Route path=\"/job/:id\" component={<JobShow /> }/> */}\n            <Route exact path=\"/job/new\" render={(routerProps) => <JobForm {...routerProps} /> }/>\n            <Route exact path=\"/notes\" render={(routerProps) => <NotesPage {...routerProps} user={user} /> }/>\n            {/* <Route path=\"/company/:id\" component={<SingleCompany /> }/> */}\n            <Route exact path=\"/about\" render={(routerProps) => <About {...routerProps} /> }/>\n            <Route exact path=\"/login\" render={(routerProps) => <Home  {...routerProps} user={user}/> }/>\n          </Switch>\n        </BrowserRouter>\n      )\n    }\n    else{\n      return(\n        <Login handleLogin = {this.handleLogin} user={this.state.user}/>\n          \n      )\n    }\n \n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Navbar user = {this.state.user} handleLogout={this.handleLogout}/> \n          <div className=\"site-wrap\">\n          {this.renderRoutes()}\n          </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}