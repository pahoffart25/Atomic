{"ast":null,"code":"var _jsxFileName = \"/Users/paulhoffart/Desktop/Atomic-Job/atomic-job-front-end/src/components/JobModalShow.js\";\nimport React from \"react\";\nimport NotesBox from \"../components/NotesBox\";\nimport TasksBox from \"../components/TasksBox\";\nexport default class JobModalShow extends React.Component {\n  constructor() {\n    super();\n\n    this.handleEdit = () => {\n      this.setState({\n        editing: true\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        job: { ...this.state.job,\n          [event.target.name]: event.target.value\n        }\n      });\n    };\n\n    this.handleSubmit = () => {\n      this.props.editJob(this.state.job);\n      this.setState({\n        editing: false\n      });\n    };\n\n    this.handleDelete = () => {\n      this.props.deleteJob(this.state.job);\n    };\n\n    this.editNote = note => {\n      fetch(`http://localhost:3000/notes/${note.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.token}`\n        },\n        body: JSON.stringify(note)\n      }).then(resp => resp.json()).then(updatedNote => {\n        let updatedNoteList = this.state.notes.map(note => note.id === updatedNote.id ? note = updatedNote : note);\n        this.setState({\n          notes: updatedNoteList\n        });\n      });\n    };\n\n    this.addNote = (event, note) => {\n      const trimmed = event.target[0].value.trim().length;\n\n      if (trimmed !== 0) {\n        event.preventDefault();\n        let postObj = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.token}`\n          },\n          body: JSON.stringify({\n            content: event.target[0].value,\n            job_id: this.props.job.id\n          })\n        };\n        event.target.reset();\n        fetch(`http://localhost:3000/notes`, postObj).then(resp => resp.json()).then(newNote => {\n          this.state.notes.push(newNote);\n          this.setState({\n            notes: this.state.notes\n          });\n        });\n      } else {\n        event.preventDefault();\n        alert('Please enter your note');\n        event.target.reset();\n      }\n    };\n\n    this.deleteNote = note => {\n      fetch(`http://localhost:3000/notes/${note.id}`, {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${localStorage.token}`\n        }\n      }).then(resp => resp.json()).then(remainingNoteList => {\n        this.setState({\n          notes: remainingNoteList\n        });\n      });\n    };\n\n    this.editTask = task => {\n      fetch(`http://localhost:3000/job_tasks/${task.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.token}`\n        },\n        body: JSON.stringify(task)\n      }).then(resp => resp.json()).then(updatedTask => {\n        let updatedTaskList = this.state.tasks.map(task => task.id === updatedTask.id ? task = updatedTask : task);\n        this.setState({\n          tasks: updatedTaskList\n        });\n      });\n    };\n\n    this.addTask = (event, task) => {\n      const trimmed = event.target[0].value.trim().length;\n\n      if (trimmed !== 0) {\n        event.preventDefault();\n        let postObj = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.token}`\n          },\n          body: JSON.stringify({\n            item: event.target[0].value,\n            closed: false,\n            job_id: this.props.job.id\n          })\n        };\n        event.target.reset();\n        fetch(`http://localhost:3000/job_tasks`, postObj).then(resp => resp.json()).then(newTask => {\n          this.state.tasks.push(newTask);\n          this.setState({\n            tasks: this.state.tasks\n          });\n        });\n      } else {\n        event.preventDefault();\n        alert('Please enter your task');\n        event.target.reset();\n      }\n    };\n\n    this.deleteTask = task => {\n      fetch(`http://localhost:3000/job_tasks/${task.id}`, {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${localStorage.token}`\n        }\n      }).then(resp => resp.json()).then(reminaingTaskList => {\n        this.setState({\n          tasks: reminaingTaskList\n        });\n      });\n    };\n\n    this.state = {\n      job: {\n        title: \"\",\n        company: \"\",\n        status: \"\",\n        interview: \"\",\n        dateApplied: \"\"\n      },\n      notes: null,\n      tasks: null,\n      editing: false\n    };\n  }\n\n  componentDidUpdate() {\n    let isAJob = this.props.job;\n    let isFirstJob = this.state.job.id ? false : true;\n    let isADiffJob = isAJob ? this.props.job.id !== this.state.job.id : false;\n\n    const fetchJobData = () => {\n      fetch(`http://localhost:3000/jobs/${this.props.job.id}`, {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${localStorage.token}`\n        }\n      }).then(resp => resp.json()).then(jobData => {\n        this.setState({\n          job: this.props.job,\n          notes: jobData.notes,\n          tasks: jobData.tasks\n        });\n      });\n    };\n\n    if (isAJob && isFirstJob) {\n      fetchJobData();\n    } else if (isAJob && isADiffJob) {\n      fetchJobData();\n    }\n  } // FUNCTION REGARDING JOBS\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal fade\",\n      id: \"show-job\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-dialog modal-dialog-centered\",\n      role: \"document\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 13\n      }\n    }, this.state.editing ? /*#__PURE__*/React.createElement(\"header\", {\n      className: \"text-justify\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      value: this.state.job.title,\n      placeholder: \"enter job title...\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 26\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 21\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"company\",\n      value: this.state.job.company,\n      placeholder: \"enter copmany...\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 26\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"location\",\n      value: this.state.job.location,\n      placeholder: \"enter location...\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 26\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 21\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"url\",\n      value: this.state.job.url,\n      placeholder: \"enter url...\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 26\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"h6\", {\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 21\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 54\n      }\n    }), \"  \")) : /*#__PURE__*/React.createElement(\"header\", {\n      className: \"text-justify\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: this.state.job.url,\n      target: \"_blank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 23\n      }\n    }, \" \", this.state.job.title, \" \")), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 21\n      }\n    }, \" \", this.state.job.company, \" \"), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }\n    }, \" \", this.state.job.location, \" \"), /*#__PURE__*/React.createElement(\"h6\", {\n      onClick: this.handleEdit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 21\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-pencil\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 52\n      }\n    }), \" \")), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"close\",\n      \"data-dismiss\": \"modal\",\n      \"aria-label\": \"Close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 19\n      }\n    }, \"\\xD7\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"input-group-text\",\n      htmlFor: \"inputGroupSelect01\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 19\n      }\n    }, \"Status\")), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"custom-select\",\n      name: \"status\",\n      id: \"inputGroupSelect01\",\n      value: this.state.job.status,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      name: \"status\",\n      value: \"open\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 19\n      }\n    }, \"Open\"), /*#__PURE__*/React.createElement(\"option\", {\n      name: \"status\",\n      value: \"in-process\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 19\n      }\n    }, \"In Process\"), /*#__PURE__*/React.createElement(\"option\", {\n      name: \"status\",\n      value: \"closed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 19\n      }\n    }, \"Closed\"))), this.state.job.status !== \"open\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"sr-only\",\n      htmlFor: \"inlineFormInputGroup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 25\n      }\n    }, \"Date Applied\")), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"date\",\n      className: \"form-control\",\n      id: \"inlineFormInputGroup\",\n      name: \"dateApplied\",\n      value: this.state.job.date_applied,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 23\n      }\n    }))) : null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 15\n      }\n    }, this.state.tasks ? /*#__PURE__*/React.createElement(TasksBox, {\n      tasks: this.state.tasks,\n      filterTask: this.filterTask,\n      addTask: this.addTask,\n      editTask: this.editTask,\n      deleteTask: this.deleteTask,\n      handleTaskChange: this.handleTaskChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 21\n      }\n    }) : null, this.state.notes ? /*#__PURE__*/React.createElement(NotesBox, {\n      notes: this.state.notes,\n      editNote: this.editNote,\n      addNote: this.addNote,\n      editNote: this.editNote,\n      deleteNote: this.deleteNote,\n      handleNoteChange: this.handleNoteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 21\n      }\n    }) : null)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      \"data-dismiss\": \"modal\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 15\n      }\n    }, \"Save\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary\",\n      \"data-dismiss\": \"modal\",\n      onClick: this.handleDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 15\n      }\n    }, \"Delete\")))));\n  }\n\n}","map":{"version":3,"sources":["/Users/paulhoffart/Desktop/Atomic-Job/atomic-job-front-end/src/components/JobModalShow.js"],"names":["React","NotesBox","TasksBox","JobModalShow","Component","constructor","handleEdit","setState","editing","handleChange","event","job","state","target","name","value","handleSubmit","props","editJob","handleDelete","deleteJob","editNote","note","fetch","id","method","headers","Authorization","localStorage","token","body","JSON","stringify","then","resp","json","updatedNote","updatedNoteList","notes","map","addNote","trimmed","trim","length","preventDefault","postObj","content","job_id","reset","newNote","push","alert","deleteNote","remainingNoteList","editTask","task","updatedTask","updatedTaskList","tasks","addTask","item","closed","newTask","deleteTask","reminaingTaskList","title","company","status","interview","dateApplied","componentDidUpdate","isAJob","isFirstJob","isADiffJob","fetchJobData","jobData","render","location","url","date_applied","filterTask","handleTaskChange","handleNoteChange"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport NotesBox from \"../components/NotesBox\"\nimport TasksBox from \"../components/TasksBox\"\n\nexport default class JobModalShow extends React.Component {\n\n  constructor(){\n    super()\n    this.state = {\n      job: {\n        title: \"\",\n        company: \"\",\n        status: \"\",\n        interview: \"\",\n        dateApplied: \"\",\n      },\n      notes: null, \n      tasks: null,\n      editing: false\n    }\n  }\n\n  componentDidUpdate(){\n    let isAJob = this.props.job \n    let isFirstJob = this.state.job.id ? false : true\n    let isADiffJob = isAJob ? (this.props.job.id !== this.state.job.id) : false\n\n    const fetchJobData = () => {\n      fetch(`http://localhost:3000/jobs/${this.props.job.id}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${localStorage.token}` \n        }\n      })\n      .then(resp => resp.json())\n      .then(jobData => {\n        this.setState({\n          job: this.props.job,\n          notes: jobData.notes,\n          tasks: jobData.tasks\n        })\n      })\n    }\n\n    if(isAJob && isFirstJob){\n      fetchJobData()\n    } else if (isAJob && isADiffJob){\n      fetchJobData()\n    }\n   \n  }\n\n  // FUNCTION REGARDING JOBS\n\n  handleEdit = () => {\n    this.setState({\n      editing: true\n    })\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      job: {...this.state.job, [event.target.name]: event.target.value}\n    })\n  }\n\n  handleSubmit = () => {\n    this.props.editJob(this.state.job)\n    this.setState({\n      editing: false\n    })\n  }\n\n\n  handleDelete = () => {\n    this.props.deleteJob(this.state.job)\n  }\n\n  // FUNCTIONS REGARDING NOTES\n\n  editNote = (note) => {\n    fetch(`http://localhost:3000/notes/${note.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.token}`\n      }, \n      body: JSON.stringify(note)\n    })\n    .then(resp => resp.json())\n    .then(updatedNote => {\n      let updatedNoteList = this.state.notes.map(note=>\n        note.id === updatedNote.id ? note = updatedNote : note \n      )\n      this.setState({\n        notes: updatedNoteList\n      })\n    })\n  }\n\n\n  addNote = (event, note) => {\n    const trimmed = event.target[0].value.trim().length\n    if (trimmed !== 0) {\n      event.preventDefault()\n      let postObj = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.token}`\n          },\n          body: JSON.stringify({\n            content: event.target[0].value,\n            job_id: this.props.job.id\n          })\n      }\n      event.target.reset()\n      fetch(`http://localhost:3000/notes`, postObj)\n      .then(resp => resp.json())\n      .then(newNote => {\n        this.state.notes.push(newNote)\n        this.setState({\n          notes: this.state.notes\n        })\n      })\n    }else{\n      event.preventDefault()\n      alert('Please enter your note')\n      event.target.reset()\n    }\n  }\n\n  deleteNote = (note) => {\n    fetch(`http://localhost:3000/notes/${note.id}`,{\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Bearer ${localStorage.token}`\n      }\n    })\n    .then(resp => resp.json())\n    .then(remainingNoteList => {\n      this.setState({\n        notes: remainingNoteList\n      })\n    })\n  }\n\n  // FUNCTIONS REGARDING TASKS\n\n  editTask = (task) => {\n    fetch(`http://localhost:3000/job_tasks/${task.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.token}`\n      }, \n      body: JSON.stringify(task)\n    })\n    .then(resp => resp.json())\n    .then(updatedTask => {\n      let updatedTaskList = this.state.tasks.map( task=> \n        task.id === updatedTask.id ? task = updatedTask : task\n      )\n      this.setState({\n        tasks: updatedTaskList\n      })\n    })\n  }\n\n  addTask = (event, task) => {\n    const trimmed = event.target[0].value.trim().length\n    if (trimmed !== 0) {\n      event.preventDefault()\n      let postObj = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.token}`\n        },\n        body: JSON.stringify({\n          item: event.target[0].value,\n          closed: false,\n          job_id: this.props.job.id\n        })\n      }\n      event.target.reset()\n      fetch(`http://localhost:3000/job_tasks`, postObj)\n      .then(resp => resp.json())\n      .then(newTask => {\n        this.state.tasks.push(newTask)\n        this.setState({\n          tasks: this.state.tasks\n        })\n      })\n    }else {\n      event.preventDefault()\n      alert('Please enter your task')\n      event.target.reset()\n    }\n  }\n\n  deleteTask = (task) => {\n    fetch(`http://localhost:3000/job_tasks/${task.id}`, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Bearer ${localStorage.token}`\n      }\n    })\n    .then(resp => resp.json())\n    .then(reminaingTaskList => {\n      this.setState({\n        tasks: reminaingTaskList\n      })\n    })\n  }\n\n\n\n  render(){\n    return(\n      <div className=\"modal fade\" id=\"show-job\" >\n        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n\n              {this.state.editing\n                ? (<header className=\"text-justify\">\n                    <h2> <input type=\"text\" name=\"title\" value={this.state.job.title} placeholder=\"enter job title...\" onChange={this.handleChange}/> </h2>\n                    <h4> <input type=\"text\" name=\"company\" value={this.state.job.company} placeholder=\"enter copmany...\" onChange={this.handleChange}/> </h4>\n                    <h6> <input type=\"text\" name=\"location\" value={this.state.job.location} placeholder=\"enter location...\" onChange={this.handleChange}/> </h6>\n                    <h6> <input type=\"text\" name=\"url\" value={this.state.job.url} placeholder=\"enter url...\" onChange={this.handleChange}/> </h6>\n                    <h6 onClick={this.handleSubmit}> <span className=\"icon-check\"></span>  </h6>\n                  </header>)\n                : (<header className=\"text-justify\">\n                    <a href={this.state.job.url} target=\"_blank\"> \n                      <h2> {this.state.job.title} </h2> \n                    </a>\n                    <h4> {this.state.job.company} </h4>\n                    <h6> {this.state.job.location} </h6>\n                    <h6 onClick={this.handleEdit}> <span className=\"icon-pencil\"></span> </h6>\n                  </header>)\n              }\n\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" >\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n\n            <div className=\"modal-body\">\n\n              <div className=\"input-group mb-3\" >\n                <div className=\"input-group-prepend\">\n                  <label className=\"input-group-text\" htmlFor=\"inputGroupSelect01\">Status</label>\n                </div>\n                <select className=\"custom-select\" name=\"status\" id=\"inputGroupSelect01\" value={this.state.job.status} onChange={this.handleChange}>\n                  <option name=\"status\" value=\"open\">Open</option>\n                  <option name=\"status\" value=\"in-process\">In Process</option>\n                  <option name=\"status\" value=\"closed\">Closed</option>\n                </select>\n              </div>\n\n              {\n                this.state.job.status !== \"open\"\n                ? <div className=\"input-group mb-3\" >\n                    <label className=\"sr-only\" htmlFor=\"inlineFormInputGroup\"></label>\n                    <div className=\"input-group mb-2\">\n                      <div className=\"input-group-prepend\">\n                        <div className=\"input-group-text\" >Date Applied</div>\n                      </div>\n                      <input type=\"date\" className=\"form-control\" id=\"inlineFormInputGroup\" name=\"dateApplied\" value={this.state.job.date_applied} onChange={this.handleChange}/>\n                    </div>\n                  </div>\n                : null\n              }\n              <div>\n                {\n                  this.state.tasks \n                  ? <TasksBox \n                      tasks={this.state.tasks} \n                      filterTask={this.filterTask}\n                      addTask={this.addTask} \n                      editTask={this.editTask} \n                      deleteTask={this.deleteTask} \n                      handleTaskChange={this.handleTaskChange}/>\n                  : null\n                }\n                {\n                  this.state.notes \n                  ? <NotesBox \n                      notes={this.state.notes} \n                      editNote={this.editNote}\n                      addNote={this.addNote} editNote={this.editNote} \n                      deleteNote={this.deleteNote}\n                      handleNoteChange={this.handleNoteChange}/> \n                  : null\n                }\n              </div>\n            </div>\n            <div className=\"modal-footer\">\n              <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\" onClick={this.handleSubmit}>Save</button>\n              <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={this.handleDelete}>Delete</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}"]},"metadata":{},"sourceType":"module"}